export function addUser(user) {
    return {
        type: "ADD_USER",
        payload: user
    }
}
export function removeUser(user) {
    return {
        type: "REMOVE_USER",
        payload: user
    }
}

const initialState ={
    users: []
}

export default function userReducer(state = initialState, action) {
    switch (action.type) {
     
        case "ADD_USER":

            return{
                ...state,
                users: [...state.users, action.payload]
            } 
        

        case "REMOVE_USER": 
        
            const updatedArr = state.users.filter(people => people !== action.payload)
            return {
                ...state,
                users: updatedArr
            }

        default:
            return state
    }
}

const store = createStore(userReducer)
store.subscribe(() => console.log(store.getstate()))
export default store

// module.exports = {
//     userReducer,
//     addUser,
//     removeUser
// }

//app,js

// const redux = require("redux")


import React from 'react'
import {connect} from 'react-redux'
import  {addUser, removeUser, userReducer} from './redux '


function App( props ) {
  return (
    <div className="App">
     
    </div>
  );
}

function mapStateToProps(state) {
  return {
    users: state
  }
}

const mapDispatchToProps = {
  add: addUser,
  remove: removeUser
}

export default connect( mapStateToProps , mapDispatchToProps    ) (App);
// export default App;


//indes.js

import React from 'react';
import ReactDOM from 'react-dom';
import {Provider} from 'react-redux';
import store from './redux'
import './index.css';
import App from './App';


ReactDOM.render(
  <Provider store={store}>
    <App />
  </Provider>, 
  document.getElementById('root'));
